"""empty message

Revision ID: 96db58144cb8
Revises: 
Create Date: 2023-01-24 15:32:40.505382

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '96db58144cb8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('main_slider_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('heading', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('position')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('basket_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['basket_id'], ['baskets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('positions')
    op.drop_table('employees')
    op.drop_table('ingredients')
    op.drop_table('measures')
    op.drop_table('product_ingredients')
    op.drop_table('orders')
    op.drop_table('ingredient_shipments')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    with op.batch_alter_table('basket_products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.drop_constraint('basket_products_product_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('basket_products_basket_id_fkey', type_='foreignkey')
        batch_op.drop_column('extra_data')

    with op.batch_alter_table('baskets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.alter_column('is_ordered',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=True)

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('translit', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    with op.batch_alter_table('deliveries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.drop_constraint('deliveries_order_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'order', ['order_id'], ['id'])

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.drop_column('extra_data')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=255),
               nullable=True,
               existing_server_default=sa.text("'user'::character varying"))
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('birthday')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=255),
               nullable=False,
               existing_server_default=sa.text("'user'::character varying"))
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_column('is_active')

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extra_data', sa.VARCHAR(length=100), autoincrement=False, nullable=True))

    with op.batch_alter_table('deliveries', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('deliveries_order_id_fkey', 'orders', ['order_id'], ['id'])
        batch_op.drop_column('is_active')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_column('is_active')
        batch_op.drop_column('translit')

    with op.batch_alter_table('baskets', schema=None) as batch_op:
        batch_op.alter_column('is_ordered',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.drop_column('is_active')

    with op.batch_alter_table('basket_products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extra_data', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('basket_products_basket_id_fkey', 'baskets', ['basket_id'], ['id'])
        batch_op.create_foreign_key('basket_products_product_id_fkey', 'products', ['product_id'], ['id'])
        batch_op.drop_column('is_active')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_column('is_active')

    op.create_table('ingredient_shipments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('measure_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], name='ingredient_shipments_ingredient_id_fkey'),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.id'], name='ingredient_shipments_measure_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ingredient_shipments_pkey')
    )
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('basket_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['basket_id'], ['baskets.id'], name='orders_basket_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey')
    )
    op.create_table('product_ingredients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], name='product_ingredients_ingredient_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_ingredients_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_ingredients_pkey')
    )
    op.create_table('measures',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='measures_pkey')
    )
    op.create_table('ingredients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('caloric_100g', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['caloric_100g'], ['ingredients.id'], name='ingredients_caloric_100g_fkey'),
    sa.PrimaryKeyConstraint('id', name='ingredients_pkey')
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('register_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('position_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], name='employees_position_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey'),
    sa.UniqueConstraint('email', name='employees_email_key')
    )
    op.create_table('positions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='positions_pkey')
    )
    op.drop_table('order')
    op.drop_table('reviews')
    op.drop_table('main_slider_actions')
    # ### end Alembic commands ###
